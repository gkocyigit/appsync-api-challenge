{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "GetStudentsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-guru-challenge-dev-getStudents"
      }
    },
    "GetStudentLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-guru-challenge-dev-getStudent"
      }
    },
    "AddStudentLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-guru-challenge-dev-addStudent"
      }
    },
    "UpdateStudentScoreLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-guru-challenge-dev-updateStudentScore"
      }
    },
    "DeleteStudentLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-guru-challenge-dev-deleteStudent"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "serverless-guru-challenge",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-guru-challenge-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-guru-challenge-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "serverless-guru-challenge",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GetStudentsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-guru-challenge/dev/1626034469448-2021-07-11T20:14:29.448Z/serverless-guru-challenge.zip"
        },
        "Handler": "handler.getStudents",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-guru-challenge-dev-getStudents",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetStudentsLogGroup"
      ]
    },
    "GetStudentLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-guru-challenge/dev/1626034469448-2021-07-11T20:14:29.448Z/serverless-guru-challenge.zip"
        },
        "Handler": "handler.getStudent",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-guru-challenge-dev-getStudent",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetStudentLogGroup"
      ]
    },
    "AddStudentLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-guru-challenge/dev/1626034469448-2021-07-11T20:14:29.448Z/serverless-guru-challenge.zip"
        },
        "Handler": "handler.addStudent",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-guru-challenge-dev-addStudent",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AddStudentLogGroup"
      ]
    },
    "UpdateStudentScoreLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-guru-challenge/dev/1626034469448-2021-07-11T20:14:29.448Z/serverless-guru-challenge.zip"
        },
        "Handler": "handler.updateStudentScore",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-guru-challenge-dev-updateStudentScore",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UpdateStudentScoreLogGroup"
      ]
    },
    "DeleteStudentLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-guru-challenge/dev/1626034469448-2021-07-11T20:14:29.448Z/serverless-guru-challenge.zip"
        },
        "Handler": "handler.deleteStudent",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-guru-challenge-dev-deleteStudent",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DeleteStudentLogGroup"
      ]
    },
    "GetStudentsLambdaVersionrV5d6JD1DSd9b4umi6j6zd3Emz7PRar5X5tGhKRooj0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetStudentsLambdaFunction"
        },
        "CodeSha256": "B6sj3eOT//rpcTT1ujxsAmcp2xyeEVTs//joDC9jUMU="
      }
    },
    "GetStudentLambdaVersionfpOvO7lU19b3jM1bMS6tU42LFkbaD2P6wS9sfGk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetStudentLambdaFunction"
        },
        "CodeSha256": "B6sj3eOT//rpcTT1ujxsAmcp2xyeEVTs//joDC9jUMU="
      }
    },
    "AddStudentLambdaVersionNBP3a1dkBObrLTo4ZwLTtZBuycMKKUix6IyTT3w": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddStudentLambdaFunction"
        },
        "CodeSha256": "B6sj3eOT//rpcTT1ujxsAmcp2xyeEVTs//joDC9jUMU="
      }
    },
    "UpdateStudentScoreLambdaVersionDbFHMGbit0cWn1PJYV9VKPE2d5bNohaFz9XFrp7Sc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateStudentScoreLambdaFunction"
        },
        "CodeSha256": "B6sj3eOT//rpcTT1ujxsAmcp2xyeEVTs//joDC9jUMU="
      }
    },
    "DeleteStudentLambdaVersiongHs3FYtK67zNLwFQC3GmpoR4JPUczV8ZQGqWRpW904": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteStudentLambdaFunction"
        },
        "CodeSha256": "B6sj3eOT//rpcTT1ujxsAmcp2xyeEVTs//joDC9jUMU="
      }
    },
    "StudentDynamoDbTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "name",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "name",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 4,
          "WriteCapacityUnits": 4
        },
        "TableName": "Student"
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "appsync-lambda",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "lambda:invokeFunction",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "GetStudentLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "GetStudentLambdaFunction",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "GetStudentsLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "GetStudentsLambdaFunction",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "AddStudentLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "AddStudentLambdaFunction",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "UpdateStudentScoreLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "UpdateStudentScoreLambdaFunction",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "DeleteStudentLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "DeleteStudentLambdaFunction",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "GetStudentsLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetStudentsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        }
      }
    },
    "GetStudentLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetStudentLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        }
      }
    },
    "AddStudentLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddStudentLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        }
      }
    },
    "UpdateStudentScoreLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateStudentScoreLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        }
      }
    },
    "DeleteStudentLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteStudentLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        }
      }
    },
    "AppSyncApi": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "AuthenticationType": "API_KEY",
        "Name": "serverless-guru-challenge-dev"
      }
    },
    "AppSyncAPIKey": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        }
      }
    },
    "AppSyncSchema": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "Definition": "schema {\r\n    query:Query\r\n    mutation:Mutation\r\n}\r\n\r\ntype Mutation {\r\n    addStudent(name: String!, score: Int): Student\r\n    updateStudentScore(name: String!, score: Int!): Student\r\n    deleteStudent(name: String!): Boolean!\r\n}\r\n\r\ntype Query {\r\n    getStudents: [Student]\r\n    getStudent(name: String!): Student!\r\n}\r\n\r\ntype Student {\r\n    name: String!\r\n    score: Int\r\n}"
      }
    },
    "GetStudentLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "Type": "AWS_LAMBDA",
        "Name": "getStudentDS_dev",
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "GetStudentLambdaFunction",
              "Arn"
            ]
          }
        }
      }
    },
    "GetStudentQueryResolver": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": [
        "AppSyncSchema"
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "getStudent",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GetStudentLambdaDataSource",
            "Name"
          ]
        }
      }
    },
    "GetStudentsLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "Type": "AWS_LAMBDA",
        "Name": "getStudentsDS_dev",
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "GetStudentsLambdaFunction",
              "Arn"
            ]
          }
        }
      }
    },
    "GetStudentsQueryResolver": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": [
        "AppSyncSchema"
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "getStudents",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GetStudentsLambdaDataSource",
            "Name"
          ]
        }
      }
    },
    "UpdateStudentScoreLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "Type": "AWS_LAMBDA",
        "Name": "updateStudentDS_dev",
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "UpdateStudentScoreLambdaFunction",
              "Arn"
            ]
          }
        }
      }
    },
    "UpdateStudentScoreQueryResolver": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": [
        "AppSyncSchema"
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "updateStudentScore",
        "DataSourceName": {
          "Fn::GetAtt": [
            "UpdateStudentScoreLambdaDataSource",
            "Name"
          ]
        }
      }
    },
    "AddStudentLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "Type": "AWS_LAMBDA",
        "Name": "addStudentDS_dev",
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "AddStudentLambdaFunction",
              "Arn"
            ]
          }
        }
      }
    },
    "AddStudentQueryResolver": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": [
        "AppSyncSchema"
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "addStudent",
        "DataSourceName": {
          "Fn::GetAtt": [
            "AddStudentLambdaDataSource",
            "Name"
          ]
        }
      }
    },
    "DeleteStudentLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "Type": "AWS_LAMBDA",
        "Name": "deleteStudentDS_dev",
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "DeleteStudentLambdaFunction",
              "Arn"
            ]
          }
        }
      }
    },
    "DeleteStudentQueryResolver": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": [
        "AppSyncSchema"
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "AppSyncApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "deleteStudent",
        "DataSourceName": {
          "Fn::GetAtt": [
            "DeleteStudentLambdaDataSource",
            "Name"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "GetStudentsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetStudentsLambdaVersionrV5d6JD1DSd9b4umi6j6zd3Emz7PRar5X5tGhKRooj0"
      }
    },
    "GetStudentLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetStudentLambdaVersionfpOvO7lU19b3jM1bMS6tU42LFkbaD2P6wS9sfGk"
      }
    },
    "AddStudentLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddStudentLambdaVersionNBP3a1dkBObrLTo4ZwLTtZBuycMKKUix6IyTT3w"
      }
    },
    "UpdateStudentScoreLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateStudentScoreLambdaVersionDbFHMGbit0cWn1PJYV9VKPE2d5bNohaFz9XFrp7Sc"
      }
    },
    "DeleteStudentLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteStudentLambdaVersiongHs3FYtK67zNLwFQC3GmpoR4JPUczV8ZQGqWRpW904"
      }
    },
    "AppSyncAPIKey": {
      "Description": "The AppSync API Key used for authorizing users making GraphQL invocations.",
      "Value": {
        "Fn::GetAtt": [
          "AppSyncAPIKey",
          "ApiKey"
        ]
      }
    },
    "GraphQLApiEndpoint": {
      "Description": "The URL to the GraphQL Endpoint",
      "Value": {
        "Fn::GetAtt": [
          "AppSyncApi",
          "GraphQLUrl"
        ]
      }
    },
    "GraphQLApiId": {
      "Description": "The API ID of the GraphQL API",
      "Value": {
        "Fn::GetAtt": [
          "AppSyncApi",
          "ApiId"
        ]
      }
    }
  }
}